/*! For license information please see index.bundle.js.LICENSE.txt */
(()=>{"use strict";var t={d:(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})}};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),t.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var r=t.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var n=r.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=n[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.d({},{b:()=>P});const e=t.p+"ef1c2d68237305340404.gif";var r=function(t){return document.querySelector(t)};function n(t){var e=document.createElement(t);return e.identify=function(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];var o;"class"===t?(o=this.classList).add.apply(o,r):"id"===t?this.setAttribute("id",r[0]):console.error('Invalid identifier type. Must be "class" or "id".')},e.setAttributes=function(t){for(var e in t)this.setAttribute(e,t[e])},e}function o(t){var e=n("div");return t?(e.textContent=t,e):e}function a(t,e){var r=n("section");return r.identify(t,e),r}var i,c=["celcius","farenheit"],u=["Display °C","Display °F"],l={inactive:{unit:c[0],unitButtonText:u[0]},active:{unit:c[1]}},f={activeScale:l.active.unit,activeLocation:"new+york"},s={counter:(i=0,{increment:function(){return i+=1},decrement:function(){return i-=1},getCount:function(){return i},reset:function(){return i=0}})};function h(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function p(t){return t.replace(/([A-Z])/g," $1").toLowerCase()}function d(t){return function(t){if(Array.isArray(t))return v(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||y(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function y(t,e){if(t){if("string"==typeof t)return v(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?v(t,e):void 0}}function v(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function m(t){return{feelsLike:["fa-solid","fa-thermometer"],humidity:["fa-solid","fa-water"],chanceOfRain:["fa-solid","fa-droplet"],windSpeed:["fa-solid","fa-wind"]}[t]||console.error("Invalid key")}function g(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,a,i,c=[],u=!0,l=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=a.call(r)).done)&&(c.push(n.value),c.length!==e);u=!0);}catch(t){l=!0,o=t}finally{try{if(!u&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(l)throw o}}return c}}(t,e)||function(t,e){if(t){if("string"==typeof t)return b(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?b(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function w(){var t=c.indexOf(l.inactive.unit),e=(t+1)%c.length;l.active.unit=c[t],l.inactive.unit=c[e],l.inactive.unitButtonText=u[e],this.setAttribute("aria-label","Display temperature in ".concat(l.inactive.unit)),this.textContent=l.inactive.unitButtonText,P(f.activeLocation)}function x(t){"Enter"===t.key&&P(t.target.value)}function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function S(){S=function(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",c=a.asyncIterator||"@@asyncIterator",u=a.toStringTag||"@@toStringTag";function l(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,r){return t[e]=r}}function f(t,e,r,n){var a=e&&e.prototype instanceof m?e:m,i=Object.create(a.prototype),c=new F(n||[]);return o(i,"_invoke",{value:C(t,r,c)}),i}function s(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=f;var h="suspendedStart",p="suspendedYield",d="executing",y="completed",v={};function m(){}function g(){}function b(){}var w={};l(w,i,(function(){return this}));var x=Object.getPrototypeOf,E=x&&x(x(I([])));E&&E!==r&&n.call(E,i)&&(w=E);var _=b.prototype=m.prototype=Object.create(w);function j(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function O(t,e){function r(o,a,i,c){var u=s(t[o],t,a);if("throw"!==u.type){var l=u.arg,f=l.value;return f&&"object"==L(f)&&n.call(f,"__await")?e.resolve(f.__await).then((function(t){r("next",t,i,c)}),(function(t){r("throw",t,i,c)})):e.resolve(f).then((function(t){l.value=t,i(l)}),(function(t){return r("throw",t,i,c)}))}c(u.arg)}var a;o(this,"_invoke",{value:function(t,n){function o(){return new e((function(e,o){r(t,n,e,o)}))}return a=a?a.then(o,o):o()}})}function C(e,r,n){var o=h;return function(a,i){if(o===d)throw new Error("Generator is already running");if(o===y){if("throw"===a)throw i;return{value:t,done:!0}}for(n.method=a,n.arg=i;;){var c=n.delegate;if(c){var u=A(c,n);if(u){if(u===v)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===h)throw o=y,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=d;var l=s(e,r,n);if("normal"===l.type){if(o=n.done?y:p,l.arg===v)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(o=y,n.method="throw",n.arg=l.arg)}}}function A(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,A(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),v;var a=s(o,e.iterator,r.arg);if("throw"===a.type)return r.method="throw",r.arg=a.arg,r.delegate=null,v;var i=a.arg;return i?i.done?(r[e.resultName]=i.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,v):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,v)}function k(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function T(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function F(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(k,this),this.reset(!0)}function I(e){if(e||""===e){var r=e[i];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return a.next=a}}throw new TypeError(L(e)+" is not iterable")}return g.prototype=b,o(_,"constructor",{value:b,configurable:!0}),o(b,"constructor",{value:g,configurable:!0}),g.displayName=l(b,u,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===g||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,b):(t.__proto__=b,l(t,u,"GeneratorFunction")),t.prototype=Object.create(_),t},e.awrap=function(t){return{__await:t}},j(O.prototype),l(O.prototype,c,(function(){return this})),e.AsyncIterator=O,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new O(f(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},j(_),l(_,u,"Generator"),l(_,i,(function(){return this})),l(_,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=I,F.prototype={constructor:F,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return c.type="throw",c.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],c=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),l=n.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=t,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,v):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),v},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),T(r),v}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;T(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:I(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),v}},e}function E(t,e,r,n,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void r(t)}c.done?e(u):Promise.resolve(u).then(n,o)}var _="9a88ef47cc534a56aeb211837241202";function j(t,e,r){return"current"===t?"https://api.weatherapi.com/v1/".concat(t,".json?key=").concat(_,"&q=").concat(e,"&aqi=no"):"forecast"===t?(r||(r=1),"https://api.weatherapi.com/v1/".concat(t,".json?key=").concat(_,"&q=").concat(e,"&days=").concat(r,"&aqi=no")):void 0}function O(t,e,r){return C.apply(this,arguments)}function C(){var t;return t=S().mark((function t(e,r,n){var o,a,i,c,u;return S().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,o=j(e,r,n),t.next=4,fetch(o);case 4:if((a=t.sent).ok){t.next=13;break}return t.next=8,a.json();case 8:return i=t.sent,c=i.error.message||"An unknown error has occurred",t.abrupt("return",c);case 13:a.ok&&(f.activeLocation=r);case 14:return t.next=16,a.json();case 16:return u=t.sent,t.abrupt("return",u);case 20:t.prev=20,t.t0=t.catch(0),console.error("Error fetching weather data: ".concat(t.t0));case 23:case"end":return t.stop()}}),t,null,[[0,20]])})),C=function(){var e=this,r=arguments;return new Promise((function(n,o){var a=t.apply(e,r);function i(t){E(a,n,o,i,c,"next",t)}function c(t){E(a,n,o,i,c,"throw",t)}i(void 0)}))},C.apply(this,arguments)}function A(t){var e={};f.activeScale=l.active.unit;var r=t.current,n=t.forecast.forecastday,o={iconSource:r.condition.icon,description:r.condition.text,location:t.location.name,date:t.location.localtime.split(" ")[0],time:t.location.localtime.split(" ")[1],temperature:"farenheit"===f.activeScale?"".concat(r.temp_f," °F"):"".concat(r.temp_c," °C")};e.weatherInfo=o;var a={feelsLike:"farenheit"===f.activeScale?"".concat(r.feelslike_f," °F"):"".concat(r.feelslike_c," °C"),humidity:"".concat(r.humidity,"%"),chanceOfRain:"".concat(n[0].day.daily_chance_of_rain,"%"),windSpeed:"".concat(r.wind_mph,"mph")};e.weatherDetails=a;var i={today:{iconSource:n[0].day.condition.icon,averageTemperature:"farenheit"===f.activeScale?" ".concat(n[0].day.avgtemp_f," °F"):" ".concat(n[0].day.avgtemp_c," °C"),highTemperature:"farenheit"===f.activeScale?" ".concat(n[0].day.maxtemp_f," °F"):" ".concat(n[0].day.maxtemp_c," °C"),lowTemperature:"farenheit"===f.activeScale?" ".concat(n[0].day.mintemp_f," °F"):" ".concat(n[0].day.mintemp_c," °C")},tomorrow:{iconSource:n[1].day.condition.icon,averageTemperature:"farenheit"===f.activeScale?" ".concat(n[1].day.avgtemp_f," °F"):" ".concat(n[1].day.avgtemp_c," °C"),highTemperature:"farenheit"===f.activeScale?" ".concat(n[1].day.maxtemp_f," °F"):" ".concat(n[1].day.maxtemp_c," °C"),lowTemperature:"farenheit"===f.activeScale?" ".concat(n[1].day.mintemp_f," °F"):" ".concat(n[1].day.mintemp_c," °C")},overmorrow:{iconSource:n[2].day.condition.icon,averageTemperature:"farenheit"===f.activeScale?" ".concat(n[2].day.avgtemp_f," °F"):" ".concat(n[2].day.avgtemp_c," °C"),highTemperature:"farenheit"===f.activeScale?" ".concat(n[2].day.maxtemp_f," °F"):" ".concat(n[2].day.maxtemp_c," °C"),lowTemperature:"farenheit"===f.activeScale?" ".concat(n[2].day.mintemp_f," °F"):" ".concat(n[2].day.mintemp_c," °C")}};e.weatherForecastDaily=i;var c=function(t,e){var r={};return e.forEach((function(e,n){var o=t[e],a={hour:o.time.split(" ")[1],iconSource:o.condition.icon,temperature:"farenheit"===f.activeScale?"".concat(o.temp_f," °F"):"".concat(o.temp_c," °C")};r[n]=a})),r}(n[0].hour,function(){for(var t=[],e=(new Date).getHours()+1,r=0;r<9;r++)24===e&&(e=0),t.push(e++);return t}());return e.weatherForecastHourly=c,e}function k(){k=function(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",c=a.asyncIterator||"@@asyncIterator",u=a.toStringTag||"@@toStringTag";function l(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,r){return t[e]=r}}function f(t,e,r,n){var a=e&&e.prototype instanceof m?e:m,i=Object.create(a.prototype),c=new F(n||[]);return o(i,"_invoke",{value:j(t,r,c)}),i}function s(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=f;var h="suspendedStart",p="suspendedYield",d="executing",y="completed",v={};function m(){}function g(){}function b(){}var w={};l(w,i,(function(){return this}));var x=Object.getPrototypeOf,L=x&&x(x(I([])));L&&L!==r&&n.call(L,i)&&(w=L);var S=b.prototype=m.prototype=Object.create(w);function E(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function _(t,e){function r(o,a,i,c){var u=s(t[o],t,a);if("throw"!==u.type){var l=u.arg,f=l.value;return f&&"object"==T(f)&&n.call(f,"__await")?e.resolve(f.__await).then((function(t){r("next",t,i,c)}),(function(t){r("throw",t,i,c)})):e.resolve(f).then((function(t){l.value=t,i(l)}),(function(t){return r("throw",t,i,c)}))}c(u.arg)}var a;o(this,"_invoke",{value:function(t,n){function o(){return new e((function(e,o){r(t,n,e,o)}))}return a=a?a.then(o,o):o()}})}function j(e,r,n){var o=h;return function(a,i){if(o===d)throw new Error("Generator is already running");if(o===y){if("throw"===a)throw i;return{value:t,done:!0}}for(n.method=a,n.arg=i;;){var c=n.delegate;if(c){var u=O(c,n);if(u){if(u===v)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===h)throw o=y,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=d;var l=s(e,r,n);if("normal"===l.type){if(o=n.done?y:p,l.arg===v)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(o=y,n.method="throw",n.arg=l.arg)}}}function O(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,O(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),v;var a=s(o,e.iterator,r.arg);if("throw"===a.type)return r.method="throw",r.arg=a.arg,r.delegate=null,v;var i=a.arg;return i?i.done?(r[e.resultName]=i.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,v):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,v)}function C(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function A(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function F(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(C,this),this.reset(!0)}function I(e){if(e||""===e){var r=e[i];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return a.next=a}}throw new TypeError(T(e)+" is not iterable")}return g.prototype=b,o(S,"constructor",{value:b,configurable:!0}),o(b,"constructor",{value:g,configurable:!0}),g.displayName=l(b,u,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===g||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,b):(t.__proto__=b,l(t,u,"GeneratorFunction")),t.prototype=Object.create(S),t},e.awrap=function(t){return{__await:t}},E(_.prototype),l(_.prototype,c,(function(){return this})),e.AsyncIterator=_,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new _(f(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},E(S),l(S,u,"Generator"),l(S,i,(function(){return this})),l(S,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=I,F.prototype={constructor:F,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(A),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return c.type="throw",c.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],c=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),l=n.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=t,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,v):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),v},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),A(r),v}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;A(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:I(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),v}},e}function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function F(t,e,r,n,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void r(t)}c.done?e(u):Promise.resolve(u).then(n,o)}function I(t,i){var c;t.append(((c=n("main")).append(a("id","weather-info"),a("id","cyclone-logo-section"),a("id","weather-details")),c),a("id","forecast")),r("#weather-info").appendChild(function(t){var e,r,a=document.createDocumentFragment(),i=n("img");i.identify("class","weather-icon"),i.src=t.weatherInfo.iconSource,a.appendChild(i);for(var c=0,u=Object.entries(t.weatherInfo);c<u.length;c++){var f=(e=u[c],r=2,function(t){if(Array.isArray(t))return t}(e)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,a,i,c=[],u=!0,l=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=a.call(r)).done)&&(c.push(n.value),c.length!==e);u=!0);}catch(t){l=!0,o=t}finally{try{if(!u&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(l)throw o}}return c}}(e,r)||function(t,e){if(t){if("string"==typeof t)return h(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?h(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=f[0],p=f[1];if("iconSource"!==s)if("description"!==s){var d=o(p);d.identify("class","weather-info-".concat(s)),d.setAttribute("data-type",s),a.appendChild(d)}else{var y=n("h3");y.identify("class","weather-info-".concat(s)),y.setAttribute("data-type",s),y.textContent=p,a.appendChild(y)}}o().identify("id","unit-buttons-container");var v=n("button");v.identify("id","unit-button"),v.setAttributes({type:"button","aria-label":"display temperature in degrees ".concat(l.inactive.unit)}),v.textContent=l.inactive.unitButtonText,a.appendChild(v);var m=n("input");m.identify("id","search-input"),m.setAttributes({type:"search",placeholder:"Search Location…"});var g=n("i");g.classList.add("fa-solid","fa-magnifying-glass");var b=n("button");b.identify("id","search-button"),b.setAttributes({type:"button","aria-label":"search by location"}),b.append(g);var w=o();w.identify("id","search-box-error"),w.classList.add("hidden"),w.textContent="Please enter a valid location";var x=n("div");return x.identify("id","search-box"),x.append(m,b,w),a.appendChild(x),a}(i));var u=n("img");u.identify("id","cyclone-logo"),u.src=e;var f=r("#cyclone-logo-section");f.appendChild(u),f.identify("class","no-select"),r("#weather-details").appendChild(function(t){for(var e=document.createDocumentFragment(),r=0,a=Object.entries(t.weatherDetails);r<a.length;r++){var i,c=(g=a[r],b=2,function(t){if(Array.isArray(t))return t}(g)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,a,i,c=[],u=!0,l=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=a.call(r)).done)&&(c.push(n.value),c.length!==e);u=!0);}catch(t){l=!0,o=t}finally{try{if(!u&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(l)throw o}}return c}}(g,b)||y(g,b)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=c[0],l=o(c[1]);"feelsLike"===u&&l.setAttribute("data-type","temperature");var f=n("label");f.textContent="".concat(p(u),":");var s=n("img");s.identify("class","weather-details-icon"),(i=s.classList).add.apply(i,d(m(u)).concat(["label-icon"]));var h=o();h.identify("class","label-container"),h.append(s,f);var v=o();v.identify("class","weather-detail-".concat(u,"-container")),v.setAttribute("data-type",u),v.append(h,l),e.appendChild(v)}var g,b;return e}(i)),r("#forecast").appendChild(function(t){var e=document.createDocumentFragment(),r=function(t){var e=function(t){var e=n("div");e.identify("id","daily-data-container");for(var r=0,a=Object.entries(t);r<a.length;r++){var i=g(a[r],2),c=i[0],u=i[1],l=u.iconSource,f=n("h3");f.textContent=c;var s=n("img");s.src=l;var h={average:u.averageTemperature,high:u.highTemperature,low:u.lowTemperature},p=o();p.identify("class","day-information-container");for(var d=0,y=Object.entries(h);d<y.length;d++){var v=g(y[d],2),m=v[0],b=v[1],w=n("label");w.identify("class","data-label"),w.textContent="".concat(m,":");var x=n("span");x.identify("class",["forecast-data"]),x.setAttribute("data-type","temperature"),x.textContent=b;var L=o();L.append(w,x),p.appendChild(L)}var S=o();S.identify("class","day-data-container"),S.append(s,p);var E=o();E.identify("class","day-container"),E.append(f,S),e.appendChild(E)}return e}(t.weatherForecastDaily),r=n("h2");r.identify("id","daily-forecast-heading"),r.classList.add("section-heading"),r.textContent="Daily Forecast";var a=n("section");return a.identify("id","daily-forecast-container"),a.append(r,e),a}(t),a=function(t){var e=t.weatherForecastHourly,r=n("h2");r.identify("id","hourly-forecast-heading"),r.classList.add("section-heading"),r.textContent="Hourly Forecast";var a=function(t){var e=n("div");e.identify("id","hourly-data-container");for(var r=0,a=Object.values(t);r<a.length;r++){var i=a[r],c=i.hour,u=i.iconSource,l=i.temperature,f=n("h3");f.textContent=c;var s=n("img");s.src=u;var h=o(l);h.setAttribute("data-type","temperature");var p=o();p.identify("class","hour-container"),p.append(f,s,h),e.appendChild(p)}return e}(e),i=n("section");return i.identify("id","hourly-forecast-container"),i.append(r,a),i}(t),i=o();return i.identify("id","forecast-content-container"),i.append(r,a),e.append(i),e}(i))}function P(t){return N.apply(this,arguments)}function N(){var t;return t=k().mark((function t(e){var n,o,a;return k().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,O("forecast",e,3);case 3:if("string"==typeof(n=t.sent))s.counter.increment(),i=n,c=void 0,(c=document.getElementById("search-box-error")).textContent="".concat(i," (").concat(s.counter.getCount(),")"),c.classList.remove("hidden");else if("object"===T(n)){if(s.counter.reset(),(o=document.getElementById("content")).firstChild)for(;o.firstChild;)o.firstChild.remove();a=A(n),I(o,a),r("#unit-button").addEventListener("click",w),r("#search-input").addEventListener("keydown",x)}t.next=10;break;case 7:t.prev=7,t.t0=t.catch(0),console.error(t.t0);case 10:case"end":return t.stop()}var i,c}),t,null,[[0,7]])})),N=function(){var e=this,r=arguments;return new Promise((function(n,o){var a=t.apply(e,r);function i(t){F(a,n,o,i,c,"next",t)}function c(t){F(a,n,o,i,c,"throw",t)}i(void 0)}))},N.apply(this,arguments)}P(f.activeLocation)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,